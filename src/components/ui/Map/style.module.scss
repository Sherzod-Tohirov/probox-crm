@use '@styles/mixins.scss' as m;
@use '@styles/variables' as v;

.yandex-map-container {
  @include m.flex(stretch, start, 4rem, column);
  padding: 18px;
  border: 1px solid #e9e9e9;
  border-radius: 12px;
  box-shadow: 0 2px 4px #0000001a;
  width: 100%;
  max-width: 100%;
  height: 100%;
  flex: 1; // Take all available space in flex container
  overflow: hidden;
  box-sizing: border-box;

  // Tablet adjustments
  @include m.media-between(768px, v.$breakpoint-lg - 1px) {
    padding: 16px;
  }

  // Mobile adjustments
  @include m.media-max(767px) {
    padding: 12px;
    border-radius: 8px;
    width: 100%;
    max-width: calc(100vw - 20px);
    margin: 0 auto;
  }

  // Small mobile adjustments
  @include m.media-max(400px) {
    padding: 8px;
    border-radius: 6px;
    max-width: calc(100vw - 16px);
  }
}

.map {
  position: relative;
  width: 100%; // Always fill entire container width
  max-width: 100%; // Prevent overflow
  height: 100%; // Fill container height
  min-height: 250px; // Minimum usable height
  max-height: 70vh; // Maximum height relative to viewport
  box-sizing: border-box; // Include padding/border in width calculation
  overflow: hidden; // Prevent any content overflow
  flex: 1; // Grow to fill available space

  // Ensure Yandex Maps API div takes full space and is responsive

  // Force responsive behavior on mobile
  @include m.media-max(767px) {
    width: 100% !important;
    max-width: calc(100vw - 40px) !important;
  }

  // Small mobile specific
  @include m.media-max(480px) {
    max-width: calc(100vw - 20px) !important;
  }

  // Large screens (desktop)
  @include m.media-min(v.$breakpoint-xl) {
    max-height: 80vh;
    min-height: 350px;
  }

  // Tablet landscape (1024px - 1299px)
  @include m.media-between(1024px, v.$breakpoint-lg - 1px) {
    max-height: 70vh;
  }

  // Tablet portrait (768px - 1023px)
  @include m.media-between(768px, 1023px) {
    max-height: 60vh;
  }

  // Large mobile (576px - 767px)
  @include m.media-between(576px, 767px) {
    max-height: 50vh;
    min-height: 220px;
  }

  // Small mobile (up to 575px)
  @include m.media-max(575px) {
    max-height: 45vh;
    min-height: 200px;
  }

  // Very small screens (up to 400px)
  @include m.media-max(400px) {
    max-height: 40vh;
    min-height: 180px;
  }
}

.no-location {
  position: absolute;
  top: 10px;
  left: 10px;
  z-index: 5;
  @include m.flex(centart, start);
  font-size: 3.5rem;
  font-weight: 500;
  opacity: 0.8;
  pointer-events: none;
  @include m.media-max(v.$breakpoint-md) {
    font-size: 3rem;
  }
}

.search-container {
  display: flex;
  gap: 8px;
  margin-bottom: 10px;
  width: 100%;

  &.hidden {
    display: none;
  }

  // Mobile: stack vertically for better usability
  @include m.media-max(767px) {
    flex-direction: column;
    gap: 8px;
    margin-bottom: 12px;
  }

  // Small mobile: tighter spacing
  @include m.media-max(400px) {
    gap: 6px;
    margin-bottom: 8px;
  }
}

.search-input {
  flex: 1;
  padding: 10px;
  font-size: 16px;
  border: 1px solid #e9e9e9;
  border-radius: 4px;
  min-width: 0; // Prevents flex overflow
  box-sizing: border-box;

  &:focus {
    outline: none;
    border-color: v.$button-bg;
    box-shadow: 0 0 0 2px rgba(10, 77, 104, 0.1);
  }

  // Mobile adjustments
  @include m.media-max(767px) {
    padding: 12px;
    font-size: 16px; // Keep 16px to prevent zoom on iOS
    width: 100%;
  }

  // Small mobile adjustments
  @include m.media-max(400px) {
    padding: 10px;
  }
}

.search-button {
  padding: 8px 16px;
  background: v.$button-bg;
  color: #fff;
  border: none;
  cursor: pointer;
  border-radius: 4px;
  white-space: nowrap;
  transition: background-color 0.2s ease;
  min-height: 44px; // Touch-friendly minimum

  &:hover:not(:disabled) {
    background: v.$button-hover-bg;
  }

  &:disabled {
    background: v.$primary-disabled-color;
    cursor: not-allowed;
  }

  // Mobile adjustments
  @include m.media-max(767px) {
    padding: 12px 16px;
    width: 100%;
    font-size: 16px;
  }
}

// Loading state
.loading {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 10;
  background: rgba(255, 255, 255, 0.9);
  padding: 20px;
  border-radius: 8px;
  font-size: 4rem;
  opacity: 0.6;
  font-weight: 500;
  color: v.$primary-color;
  backdrop-filter: blur(2px);

  @include m.media-max(767px) {
    padding: 15px;
    font-size: 14px;
  }
}

// Error state
.error-message {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 10;
  background: rgba(255, 255, 255, 0.95);
  padding: 20px;
  border-radius: 8px;
  text-align: center;
  color: v.$danger-color;
  font-size: 5rem;
  font-weight: 500;
  border: 1px solid v.$danger-color;
  backdrop-filter: blur(2px);

  button {
    margin-top: 10px;
    padding: 8px 16px;
    background: v.$danger-color;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 14px;

    &:hover {
      background: rgba(v.$danger-color, 0.8);
    }
  }

  @include m.media-max(767px) {
    padding: 15px;
    font-size: 14px;

    button {
      padding: 10px 20px;
      font-size: 16px;
      width: 100%;
    }
  }
}
