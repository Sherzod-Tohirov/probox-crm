@use '@styles/mixins.scss' as m;
@use '@styles/variables.scss' as v;

.input {
  width: 100%;
  color: v.$filter-input-color !important;
  border: 1px solid transparent;

  &::placeholder {
    color: v.$filter-input-placeholder-color;
  }

  &.placeholder-primary {
    &::placeholder {
      color: v.$filter-input-placeholder-color !important;
    }
  }

  &.placeholder-secondary {
    &::placeholder {
      color: v.$filter-input-placeholder-color-secondary !important;
    }
  }

  &.outlined {
    min-height: 35px;
    padding: 8px 30px 8px 12px;
    border-radius: 6px;
    border: v.$primary-border-width v.$primary-border-type
      v.$filter-input-border-color;
    background: v.$filter-input-bg;

    @include m.media-max(v.$breakpoint-md) {
      padding: 4px 10px 4px 12px;
      min-width: 80px;
    }
  }

  &.filled {
    min-height: auto;
    padding: 11px 12px 11px 12px;
    background: v.$primary-input-bg;
    font-size: 3.5rem;
    font-style: normal;
    font-weight: 500;
    line-height: 143%;
    color: v.$primary-color;
    border-radius: 12px;
    background-color: '';
    transition: min-width v.$transition-time v.$transition-type;
  }

  &.select {
    appearance: none;
    color: v.$filter-input-placeholder-color !important;
  }

  &.select.filled {
    color: v.$filter-input-color !important;
  }

  &.file[type='file'] {
    display: none !important;
  }

  &.file[type='file'] + label {
    min-height: 43px;
    max-height: 68px;
    overflow: auto;

    & span {
      display: flex;
    }
  }

  &.date {
    color: v.$filter-input-placeholder-color !important;
    cursor: pointer;
  }

  &.filled.date {
    color: inherit !important;
  }

  // &.disabled {
  //   pointer-events: none;
  // }

  &.error {
    border-color: v.$danger-color !important;
  }

  &.date ::-webkit-inner-spin-button,
  &.date::-webkit-calendar-picker-indicator {
    display: none;
    -webkit-appearance: none;
  }
}

.input-wrapper {
  @include m.flex(center, start, 2rem);
  width: 100%;
  flex-direction: column !important;
}

.search-variant {
  width: 50rem;
  padding: 0.5rem 1rem;
  border: none;
  outline: none;
  border-bottom: 0.5rem v.$primary-border-type transparent;
  transition: border v.$transition-time v.$transition-type;
  &,
  &::placeholder {
    color: v.$primary-color;
    font-size: 4rem;
    font-weight: 500;
    line-height: 150%;
  }

  &:focus {
    border-bottom-color: v.$primary-color;
  }
}

.input-tel-outlined {
  width: 100% !important;
  padding: 8px 30px 8px 12px !important;
  border-radius: 6px !important;
  border: v.$primary-border-width v.$primary-border-type
    v.$filter-input-border-color !important;
  background: v.$filter-input-bg !important;
}

.input-box {
  position: relative;
  width: 100%;
  &.tel {
    width: 310px;
  }
  &.filled {
    width: 310px;
  }
  &.outlined {
    width: 100%;
  }
  &.small {
    width: 257px;
  }
  &.longer {
    width: 400px;
    @include m.media-max(v.$breakpoint-md) {
      width: 100%;
    }
  }
  &.full {
    width: 100%;
    flex-grow: 1;

    & input,
    select {
      width: 100%;
      padding: 12px !important;
      font-size: 4rem !important;
    }
  }

  &.full-grow {
    width: 100% !important;
    flex-grow: 1 !important;
  }
}

.input-tel-filled {
  width: 100% !important;
  height: auto !important;
  padding: 11px 12px !important;
  background: v.$primary-input-bg !important;
  font-size: 3.5rem !important;
  font-style: normal !important;
  font-weight: 500 !important;
  line-height: 143% !important;
  color: v.$primary-color !important;
  border-radius: 12px !important;
  background-color: '' !important;
  border: 1px solid transparent !important;
  transition: all v.$transition-time v.$transition-type !important;
}

.icon {
  position: absolute;
  top: 50%;
  right: 12px;
  @include m.flex-center;
  transform: translate(0, -50%);
  font-size: 3.8rem;
  z-index: 99;
  color: v.$filter-input-placeholder-color-secondary;
  & svg {
    width: 16px;
    height: 16px;
  }
}

.icon-text {
  @include m.flex(center, center, 0);
  color: v.$secondary-color;
}

.label {
  font-size: 3.5rem;
  font-style: normal;
  font-weight: 500;
  line-height: 143%;
  color: v.$primary-label-color;
}

.file-image {
  width: 24px;
  height: 24px;
  border-radius: 6px;
}

.error-text {
  position: absolute;
  bottom: -50%;
  max-width: 100%;
  display: flex;
  margin-top: 4px;
  white-space: nowrap;
  font-size: 3rem;
  font-style: normal;
  font-weight: 500;
  line-height: 143%;
  color: rgba(v.$danger-color, 0.6);
  pointer-events: none;
}

.search-field {
  position: absolute !important;
  top: 120% !important;
  bottom: 0;
  z-index: 1000;
  width: 480px;
  min-height: 180px;
  max-height: 500px;
  overflow-y: auto;
  padding: 6px;
  border: 1px solid v.$primary-border-color;
  border-radius: 10px;
  background-color: v.$primary-bg;
  box-shadow: 2px 7px 11px 1px rgba(0, 0, 0, 0.09);

  @media (max-width: (v.$breakpoint-md - 1)) {
    width: 100%;
  }

  &-list {
    align-self: flex-start;
    width: 100%;
    gap: 4px;
    padding: 0;
    margin: 0;
    list-style: none;
    & li {
      padding: 10px;
      font-size: 3.2rem;
      font-style: normal;
      font-weight: 500;
      line-height: 143%;
      color: v.$primary-color;
      border-bottom: 1px solid v.$primary-border-color;
      border-radius: 8px;
      cursor: pointer;
      transition: background-color v.$transition-time v.$transition-type;
      @media (max-width: (v.$breakpoint-md - 1)) {
        font-size: 2.7rem;
      }
      &:hover {
        background-color: rgba(0, 0, 0, 0.05);
      }
    }
  }

  &-empty {
    font-size: 3.3rem;
    color: v.$secondary-color;
    pointer-events: none;
    opacity: 0.8;
  }
}

.infinite-scroll-wrapper {
  @include m.flex-center;
  width: 100%;
  height: 100% !important;
}

.infinite-loader {
  @include m.flex-center;
  width: 100%;
  padding: 4px;
}

.hidden {
  display: none;
}

:global(.react-select__container) {
  width: 100% !important;
  max-width: 100% !important;
  min-width: 0 !important;
}

:global(.react-select__control) {
  min-height: 35px !important;
  height: 35px !important;
  max-height: 35px !important;
  min-width: 0 !important; // allow shrink inside flex
  overflow: hidden !important; // prevent content from expanding control visually
  color: v.$filter-input-color !important;
  width: 100%;
  max-width: 100%;
  padding: 4px 30px 4px 12px !important;
  line-height: 14px !important;
  border-radius: 6px !important;
  border: v.$primary-border-width v.$primary-border-type
    v.$filter-input-border-color !important;
  background: v.$filter-input-bg !important;
  &::placeholder {
    color: v.$filter-input-placeholder-color;
  }
}

// Focus and menu-open states: use brand blue OUTLINE (not border), remove glow
:global(.react-select__control--is-focused),
:global(.react-select__control--menu-is-open) {
  outline: v.$secondary-border-width solid v.$fourth-color !important; // 0.5rem ring
  outline-offset: -0.2rem !important; // tuck closer to the control
  box-shadow: none !important;
}

:global(.react-select__menu) {
  border-radius: 14px;
  padding: 0 !important;
  z-index: 1005;
  font-size: 3rem !important;
  & * {
    color: v.$filter-input-placeholder-color !important ;
  }
}

:global(.react-select__menu-list) {
  padding: 0 !important;
}

:global(.react-select__dropdown-indicator) {
  display: none !important; /* Hides the dropdown icon */
}

:global(.react-select__value-container) {
  position: relative !important;
  height: 100% !important;
  margin: 0 !important;
  padding: 0 !important;
  min-width: 100px !important;
  line-height: 100% !important;
  font-size: 13px;
  color: v.$filter-input-placeholder-color !important;
  display: flex !important;
  align-items: center !important;
  flex: 1 1 auto !important;
  flex-wrap: nowrap !important;
  white-space: nowrap !important;
  overflow-x: auto !important;
  overflow-y: hidden !important;
  touch-action: pan-x !important;
  -webkit-overflow-scrolling: touch;

  &::-webkit-scrollbar {
    width: 7px;
    background-color: rgba(0, 0, 0, 0.1);
    overflow: hidden;
  }

  &::-webkit-scrollbar-thumb {
    background-color: rgba(0, 0, 0, 0.4);
    border-radius: 7px;
  }
}

:global(.react-select__indicators) {
  position: absolute !important;
  right: 8px !important;
  top: 50% !important;
  transform: translateY(-50%) !important;
  z-index: 2;
  pointer-events: auto !important;
}

:global(.react-select__clear-indicator) {
  cursor: pointer !important;
  padding: 0 !important;
  color: v.$filter-input-placeholder-color !important;
  & svg {
    width: 14px !important;
    height: 14px !important;
  }
}

:global(.react-select__indicator) {
  padding: 0 !important;
  display: flex !important;
  align-items: center !important;
  & svg {
    position: static !important;
    width: 14px !important;
    height: 14px !important;
  }
}

:global(.react-select__input-container) {
  margin: 0 !important;
  padding: 0 !important;
  flex: 0 0 auto !important;
}

:global(.react-select__option) {
  padding: 5px 8px !important;
  font-size: 3.5rem !important;
  font-weight: 500 !important;
  border-bottom: 1px solid rgb(245, 244, 244);
  &:hover {
    background-color: rgba(0, 0, 0, 0.05);
    cursor: pointer;
  }

  &:first-child:hover {
    border-top-left-radius: 5px;
    border-top-right-radius: 5px;
  }

  &:last-child:hover {
    border-bottom-left-radius: 5px;
    border-bottom-right-radius: 5px;
  }
}

:global(.react-select__option--is-selected) {
  display: flex !important;
  flex-direction: row !important;
  align-items: center;
  background-color: transparent !important;
  &::after {
    content: 'âœ…';
    @include m.flex-center;
    width: 14px;
    height: 14px;
    margin-left: auto;
  }
}

.file-icon {
  @include m.flex(center, center);
  width: 24px;
  height: 24px;
  border-radius: 6px;
  color: v.$primary-color;
  transition: all v.$transition-time v.$transition-type;

  & svg {
    width: 24px;
    height: 24px;
  }

  &.hidden {
    display: none !important;
  }

  &.active {
    opacity: 1 !important;
  }

  &:hover {
    opacity: 1;
    cursor: pointer;
  }
}
